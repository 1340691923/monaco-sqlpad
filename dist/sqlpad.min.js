(function(E,T){if("object"===typeof exports&&"object"===typeof module)module.exports=T();else if("function"===typeof define&&define.amd)define([],T);else{var S=T();for(var e in S)("object"===typeof exports?exports:E)[e]=S[e]}})(window,function(){return function(E){function T(T){for(var e,A,I=T[0],n=T[1],O=T[2],N=0,_=[];N<I.length;N++)A=I[N],t[A]&&_.push(t[A][0]),t[A]=0;for(e in n)Object.prototype.hasOwnProperty.call(n,e)&&(E[e]=n[e]);o&&o(T);while(_.length)_.shift()();return R.push.apply(R,O||[]),S()}function S(){for(var E,T=0;T<R.length;T++){for(var S=R[T],e=!0,A=1;A<S.length;A++){var n=S[A];0!==t[n]&&(e=!1)}e&&(R.splice(T--,1),E=I(I.s=S[0]))}return E}var e={},t={main:0},R=[];function A(E){return I.p+"js/"+({}[E]||E)+"."+{"chunk-2d0a3577":"b22ada3d","chunk-2d0a43df":"a54b6a48","chunk-2d0aa90c":"77b13e91","chunk-2d0aab07":"c513d2bb","chunk-2d0abc00":"4e55567d","chunk-2d0ae937":"443808f2","chunk-2d0aeb45":"7b5b44a0","chunk-2d0afa49":"707d7f74","chunk-2d0b2762":"c8f7b888","chunk-2d0b6187":"e38c8651","chunk-2d0ba136":"c9d79d51","chunk-2d0bb267":"8fbaa652","chunk-2d0bcec1":"5b3197c9","chunk-2d0bff92":"67731c0f","chunk-2d0c0494":"a10e9546","chunk-2d0c0a09":"c3934c86","chunk-2d0c1ed0":"ff228a94","chunk-2d0c4313":"2456f0f5","chunk-2d0c46d1":"fa1eca0d","chunk-2d0c512b":"c9bd7103","chunk-2d0cf16e":"cc603942","chunk-2d0d056d":"c34f4ca1","chunk-2d0d0645":"c8261905","chunk-2d0d2f22":"df96c077","chunk-2d0d7e63":"d43c15d6","chunk-2d0e1b57":"fc1cb6f8","chunk-2d0e1fbe":"d675cec5","chunk-2d0e22d6":"3b8e71b4","chunk-2d0e542a":"ffeb9e27","chunk-2d0e57ec":"f889b277","chunk-2d0e6553":"edae0903","chunk-2d0e6c86":"91b5f75e","chunk-2d0ea098":"846930a2","chunk-2d208ac5":"667c0e42","chunk-2d209408":"eaba1e7b","chunk-2d20f745":"190afb68","chunk-2d20ff23":"e6581d53","chunk-2d2138c7":"34c3353b","chunk-2d216f3b":"1a3b2488","chunk-2d217e5b":"691fc03d","chunk-2d21b84a":"e3b1dcf7","chunk-2d21dcd2":"1d80cac2","chunk-2d21f327":"061d2db1","chunk-2d2214b3":"32162c7a","chunk-2d221814":"c062cdf8","chunk-2d221a34":"06b3f3ed","chunk-2d22502a":"08596299","chunk-2d228ca6":"f61d6a24","chunk-2d2295e9":"961fd532","chunk-2d22c171":"bb8d14aa","chunk-2d22c2b8":"e0c78591","chunk-2d22ca58":"3b42e5d3","chunk-2d2311f7":"0c802c56","chunk-2d237ee7":"02b7e54d","chunk-2d238465":"9d786f3d","chunk-7532b3ea":"455bea02","chunk-774ac664":"cb1338f8"}[E]+".js"}function I(T){if(e[T])return e[T].exports;var S=e[T]={i:T,l:!1,exports:{}};return E[T].call(S.exports,S,S.exports,I),S.l=!0,S.exports}I.e=function(E){var T=[],S=t[E];if(0!==S)if(S)T.push(S[2]);else{var e=new Promise(function(T,e){S=t[E]=[T,e]});T.push(S[2]=e);var R,n=document.createElement("script");n.charset="utf-8",n.timeout=120,I.nc&&n.setAttribute("nonce",I.nc),n.src=A(E),R=function(T){n.onerror=n.onload=null,clearTimeout(O);var S=t[E];if(0!==S){if(S){var e=T&&("load"===T.type?"missing":T.type),R=T&&T.target&&T.target.src,A=new Error("Loading chunk "+E+" failed.\n("+e+": "+R+")");A.type=e,A.request=R,S[1](A)}t[E]=void 0}};var O=setTimeout(function(){R({type:"timeout",target:n})},12e4);n.onerror=n.onload=R,document.head.appendChild(n)}return Promise.all(T)},I.m=E,I.c=e,I.d=function(E,T,S){I.o(E,T)||Object.defineProperty(E,T,{enumerable:!0,get:S})},I.r=function(E){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(E,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(E,"__esModule",{value:!0})},I.t=function(E,T){if(1&T&&(E=I(E)),8&T)return E;if(4&T&&"object"===typeof E&&E&&E.__esModule)return E;var S=Object.create(null);if(I.r(S),Object.defineProperty(S,"default",{enumerable:!0,value:E}),2&T&&"string"!=typeof E)for(var e in E)I.d(S,e,function(T){return E[T]}.bind(null,e));return S},I.n=function(E){var T=E&&E.__esModule?function(){return E["default"]}:function(){return E};return I.d(T,"a",T),T},I.o=function(E,T){return Object.prototype.hasOwnProperty.call(E,T)},I.p="/",I.oe=function(E){throw console.error(E),E};var n=window["webpackJsonp"]=window["webpackJsonp"]||[],O=n.push.bind(n);n.push=T,n=n.slice();for(var N=0;N<n.length;N++)T(n[N]);var o=O;return R.push(["b635","chunk-vendors"]),S()}({"034f":function(E,T,S){"use strict";var e=S("64a9"),t=S.n(e);t.a},"507d":function(E,T){var S=["ACCESSIBLE","ACCOUNT","ACTION","ADD","AFTER","AGAINST","AGGREGATE","ALGORITHM","ALL","ALTER","ALWAYS","ANALYSE","ANALYZE","AND","ANY","AS","ASC","ASCII","ASENSITIVE","AT","AUTOEXTEND_SIZE","AUTO_INCREMENT","AVG","AVG_ROW_LENGTH","BACKUP","BEFORE","BEGIN","BETWEEN","BIGINT","BINARY","BINLOG","BIT","BLOB","BLOCK","BOOL","BOOLEAN","BOTH","BTREE","BY","BYTE","CACHE","CALL","CASCADE","CASCADED","CASE","CATALOG_NAME","CHAIN","CHANGE","CHANGED","CHANNEL","CHAR","CHARACTER","CHARSET","CHECK","CHECKSUM","CIPHER","CLASS_ORIGIN","CLIENT","CLOSE","COALESCE","CODE","COLLATE","COLLATION","COLUMN","COLUMNS","COLUMN_FORMAT","COLUMN_NAME","COMMENT","COMMIT","COMMITTED","COMPACT","COMPLETION","COMPRESSED","COMPRESSION","CONCURRENT","CONDITION","CONNECTION","CONSISTENT","CONSTRAINT","CONSTRAINT_CATALOG","CONSTRAINT_NAME","CONSTRAINT_SCHEMA","CONTAINS","CONTEXT","CONTINUE","CONVERT","CPU","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","CURSOR_NAME","DATA","DATABASE","DATABASES","DATAFILE","DATE","DATETIME","DAY","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DEALLOCATE","DEC","DECIMAL","DECLARE","DEFAULT","DEFAULT_AUTH","DEFINER","DELAYED","DELAY_KEY_WRITE","DELETE","DESC","DESCRIBE","DES_KEY_FILE","DETERMINISTIC","DIAGNOSTICS","DIRECTORY","DISABLE","DISCARD","DISK","DISTINCT","DISTINCTROW","DIV","DO","DOUBLE","DROP","DUAL","DUMPFILE","DUPLICATE","DYNAMIC","EACH","ELSE","ELSEIF","ENABLE","ENCLOSED","ENCRYPTION","END","ENDS","ENGINE","ENGINES","ENUM","ERROR","ERRORS","ESCAPE","ESCAPED","EVENT","EVENTS","EVERY","EXCHANGE","EXECUTE","EXISTS","EXIT","EXPANSION","EXPIRE","EXPLAIN","EXPORT","EXTENDED","EXTENT_SIZE","FALSE","FAST","FAULTS","FETCH","FIELDS","FILE","FILE_BLOCK_SIZE","FILTER","FIRST","FIXED","FLOAT","FLOAT4","FLOAT8","FLUSH","FOLLOWS","FOR","FORCE","FOREIGN","FORMAT","FOUND","FROM","FULL","FULLTEXT","FUNCTION","GENERAL","GENERATED","GEOMETRY","GEOMETRYCOLLECTION","GET","GET_FORMAT","GLOBAL","GRANT","GRANTS","GROUP","GROUP_REPLICATION","HANDLER","HASH","HAVING","HELP","HIGH_PRIORITY","HOST","HOSTS","HOUR","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IDENTIFIED","IF","IGNORE","IGNORE_SERVER_IDS","IMPORT","INDEX","INDEXES","INFILE","INITIAL_SIZE","INNER","INOUT","INSENSITIVE","INSERT","INSERT_METHOD","INSTALL","INSTANCE","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","INTERVAL","INTO","INVOKER","IO","IO_AFTER_GTIDS","IO_BEFORE_GTIDS","IO_THREAD","IPC","ISOLATION","ISSUER","ITERATE","JOIN","JSON","KEY","KEYS","KEY_BLOCK_SIZE","KILL","LANGUAGE","LAST","LEADING","LEAVE","LEAVES","LEFT","LESS","LEVEL","LIKE","LIMIT","LINEAR","LINES","LINESTRING","LIST","LOAD","LOCAL","LOCALTIME","LOCALTIMESTAMP","LOCK","LOCKS","LOGFILE","LOGS","LONG","LONGBLOB","LONGTEXT","LOOP","LOW_PRIORITY","MASTER","MASTER_AUTO_POSITION","MASTER_BIND","MASTER_CONNECT_RETRY","MASTER_DELAY","MASTER_HEARTBEAT_PERIOD","MASTER_HOST","MASTER_LOG_FILE","MASTER_LOG_POS","MASTER_PASSWORD","MASTER_PORT","MASTER_RETRY_COUNT","MASTER_SERVER_ID","MASTER_SSL","MASTER_SSL_CA","MASTER_SSL_CAPATH","MASTER_SSL_CERT","MASTER_SSL_CIPHER","MASTER_SSL_CRL","MASTER_SSL_CRLPATH","MASTER_SSL_KEY","MASTER_SSL_VERIFY_SERVER_CERT","MASTER_TLS_VERSION","MASTER_USER","MATCH","MAXVALUE","MAX_CONNECTIONS_PER_HOUR","MAX_QUERIES_PER_HOUR","MAX_ROWS","MAX_SIZE","MAX_STATEMENT_TIME","MAX_UPDATES_PER_HOUR","MAX_USER_CONNECTIONS","MEDIUM","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MEMORY","MERGE","MESSAGE_TEXT","MICROSECOND","MIDDLEINT","MIGRATE","MINUTE","MINUTE_MICROSECOND","MINUTE_SECOND","MIN_ROWS","MOD","MODE","MODIFIES","MODIFY","MONTH","MULTILINESTRING","MULTIPOINT","MULTIPOLYGON","MUTEX","MYSQL_ERRNO","NAME","NAMES","NATIONAL","NATURAL","NCHAR","NDB","NDBCLUSTER","NEVER","NEW","NEXT","NO","NODEGROUP","NONBLOCKING","NONE","NO_WAIT","NO_WRITE_TO_BINLOG","NUMBER","NUMERIC","NVARCHAR","OFFSET","OLD_PASSWORD","ON","ONE","ONLY","OPEN","OPTIMIZE","OPTIMIZER_COSTS","OPTION","OPTIONALLY","OPTIONS","OR","ORDER","OUT","OUTER","OUTFILE","OWNER","PACK_KEYS","PAGE","PARSER","PARSE_GCOL_EXPR","PARTIAL","PARTITION","PARTITIONING","PARTITIONS","PASSWORD","PHASE","PLUGIN","PLUGINS","PLUGIN_DIR","POINT","POLYGON","PORT","PRECEDES","PRECISION","PREPARE","PRESERVE","PREV","PRIMARY","PRIVILEGES","PROCEDURE","PROCESSLIST","PROFILE","PROFILES","PROXY","PURGE","QUARTER","QUERY","QUICK","RANGE","READ","READS","READ_ONLY","READ_WRITE","REAL","REBUILD","RECOVER","REDOFILE","REDO_BUFFER_SIZE","REDUNDANT","REFERENCES","REGEXP","RELAY","RELAYLOG","RELAY_LOG_FILE","RELAY_LOG_POS","RELAY_THREAD","RELEASE","RELOAD","REMOVE","RENAME","REORGANIZE","REPAIR","REPEAT","REPEATABLE","REPLACE","REPLICATE_DO_DB","REPLICATE_DO_TABLE","REPLICATE_IGNORE_DB","REPLICATE_IGNORE_TABLE","REPLICATE_REWRITE_DB","REPLICATE_WILD_DO_TABLE","REPLICATE_WILD_IGNORE_TABLE","REPLICATION","REQUIRE","RESET","RESIGNAL","RESTORE","RESTRICT","RESUME","RETURN","RETURNED_SQLSTATE","RETURNS","REVERSE","REVOKE","RIGHT","RLIKE","ROLLBACK","ROLLUP","ROTATE","ROUTINE","ROW","ROWS","ROW_COUNT","ROW_FORMAT","RTREE","SAVEPOINT","SCHEDULE","SCHEMA","SCHEMAS","SCHEMA_NAME","SECOND","SECOND_MICROSECOND","SECURITY","SELECT","SENSITIVE","SEPARATOR","SERIAL","SERIALIZABLE","SERVER","SESSION","SET","SHARE","SHOW","SHUTDOWN","SIGNAL","SIGNED","SIMPLE","SLAVE","SLOW","SMALLINT","SNAPSHOT","SOCKET","SOME","SONAME","SOUNDS","SOURCE","SPATIAL","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_AFTER_GTIDS","SQL_AFTER_MTS_GAPS","SQL_BEFORE_GTIDS","SQL_BIG_RESULT","SQL_BUFFER_RESULT","SQL_CACHE","SQL_CALC_FOUND_ROWS","SQL_NO_CACHE","SQL_SMALL_RESULT","SQL_THREAD","SQL_TSI_DAY","SQL_TSI_HOUR","SQL_TSI_MINUTE","SQL_TSI_MONTH","SQL_TSI_QUARTER","SQL_TSI_SECOND","SQL_TSI_WEEK","SQL_TSI_YEAR","SSL","STACKED","START","STARTING","STARTS","STATS_AUTO_RECALC","STATS_PERSISTENT","STATS_SAMPLE_PAGES","STATUS","STOP","STORAGE","STORED","STRAIGHT_JOIN","STRING","SUBCLASS_ORIGIN","SUBJECT","SUBPARTITION","SUBPARTITIONS","SUPER","SUSPEND","SWAPS","SWITCHES","TABLE","TABLES","TABLESPACE","TABLE_CHECKSUM","TABLE_NAME","TEMPORARY","TEMPTABLE","TERMINATED","TEXT","THAN","THEN","TIME","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TINYBLOB","TINYINT","TINYTEXT","TO","TRAILING","TRANSACTION","TRIGGER","TRIGGERS","TRUE","TRUNCATE","TYPE","TYPES","UNCOMMITTED","UNDEFINED","UNDO","UNDOFILE","UNDO_BUFFER_SIZE","UNICODE","UNINSTALL","UNION","UNIQUE","UNKNOWN","UNLOCK","UNSIGNED","UNTIL","UPDATE","UPGRADE","USAGE","USE","USER","USER_RESOURCES","USE_FRM","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALIDATION","VALUE","VALUES","VARBINARY","VARCHAR","VARCHARACTER","VARIABLES","VARYING","VIEW","VIRTUAL","WAIT","WARNINGS","WEEK","WEIGHT_STRING","WHEN","WHERE","WHILE","WITH","WITHOUT","WORK","WRAPPER","WRITE","X509","XA","XID","XML","XOR","YEAR","YEAR_MONTH","ZEROFILL"],e=["AND","BETWEEN","IN","LIKE","NOT","OR","IS","NULL","INTERSECT","UNION","INNER","JOIN","LEFT","OUTER","RIGHT"],t=["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","Area","AsBinary","AsWKB","ASCII","ASIN","AsText","AsWKT","ASYMMETRIC_DECRYPT","ASYMMETRIC_DERIVE","ASYMMETRIC_ENCRYPT","ASYMMETRIC_SIGN","ASYMMETRIC_VERIFY","ATAN","ATAN2","ATAN","AVG","BENCHMARK","BIN","BIT_AND","BIT_COUNT","BIT_LENGTH","BIT_OR","BIT_XOR","Buffer","CAST","CEIL","CEILING","Centroid","CHAR","CHAR_LENGTH","CHARACTER_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COMPRESS","CONCAT","CONCAT_WS","CONNECTION_ID","Contains","CONV","CONVERT","CONVERT_TZ","ConvexHull","COS","COT","COUNT","CRC32","CREATE_ASYMMETRIC_PRIV_KEY","CREATE_ASYMMETRIC_PUB_KEY","CREATE_DH_PARAMETERS","CREATE_DIGEST","Crosses","CURDATE","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DECODE","DEFAULT","DEGREES","DES_DECRYPT","DES_ENCRYPT","Dimension","Disjoint","Distance","ELT","ENCODE","ENCRYPT","EndPoint","Envelope","Equals","EXP","EXPORT_SET","ExteriorRing","EXTRACT","ExtractValue","FIELD","FIND_IN_SET","FLOOR","FORMAT","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GeomCollFromText","GeometryCollectionFromText","GeomCollFromWKB","GeometryCollectionFromWKB","GeometryCollection","GeometryN","GeometryType","GeomFromText","GeometryFromText","GeomFromWKB","GeometryFromWKB","GET_FORMAT","GET_LOCK","GLength","GREATEST","GROUP_CONCAT","GTID_SUBSET","GTID_SUBTRACT","HEX","HOUR","IF","IFNULL","INET_ATON","INET_NTOA","INET6_ATON","INET6_NTOA","INSERT","INSTR","InteriorRingN","Intersects","INTERVAL","IS_FREE_LOCK","IS_IPV4","IS_IPV4_COMPAT","IS_IPV4_MAPPED","IS_IPV6","IS_USED_LOCK","IsClosed","IsEmpty","ISNULL","IsSimple","JSON_APPEND","JSON_ARRAY","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_MERGE","JSON_MERGE_PRESERVE","JSON_OBJECT","JSON_QUOTE","JSON_REMOVE","JSON_REPLACE","JSON_SEARCH","JSON_SET","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","LAST_INSERT_ID","LCASE","LEAST","LEFT","LENGTH","LineFromText","LineStringFromText","LineFromWKB","LineStringFromWKB","LineString","LN","LOAD_FILE","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LTRIM","MAKE_SET","MAKEDATE","MAKETIME","MASTER_POS_WAIT","MAX","MBRContains","MBRCoveredBy","MBRCovers","MBRDisjoint","MBREqual","MBREquals","MBRIntersects","MBROverlaps","MBRTouches","MBRWithin","MD5","MICROSECOND","MID","MIN","MINUTE","MLineFromText","MultiLineStringFromText","MLineFromWKB","MultiLineStringFromWKB","MOD","MONTH","MONTHNAME","MPointFromText","MultiPointFromText","MPointFromWKB","MultiPointFromWKB","MPolyFromText","MultiPolygonFromText","MPolyFromWKB","MultiPolygonFromWKB","MultiLineString","MultiPoint","MultiPolygon","NAME_CONST","NOT IN","NOW","NULLIF","NumGeometries","NumInteriorRings","NumPoints","OCT","OCTET_LENGTH","OLD_PASSWORD","ORD","Overlaps","PASSWORD","PERIOD_ADD","PERIOD_DIFF","PI","Point","PointFromText","PointFromWKB","PointN","PolyFromText","PolygonFromText","PolyFromWKB","PolygonFromWKB","Polygon","POSITION","POW","POWER","PROCEDURE ANALYSE","QUARTER","QUOTE","RADIANS","RAND","RANDOM_BYTES","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPEAT","REPLACE","REVERSE","RIGHT","ROUND","ROW_COUNT","RPAD","RTRIM","SCHEMA","SEC_TO_TIME","SECOND","SESSION_USER","SHA1","SHA","SHA2","SIGN","SIN","SLEEP","SOUNDEX","SPACE","SQRT","SRID","ST_Area","ST_AsBinary","ST_AsWKB","ST_AsGeoJSON","ST_AsText","ST_AsWKT","ST_Buffer","ST_Buffer_Strategy","ST_Centroid","ST_Contains","ST_ConvexHull","ST_Crosses","ST_Difference","ST_Dimension","ST_Disjoint","ST_Distance","ST_Distance_Sphere","ST_EndPoint","ST_Envelope","ST_Equals","ST_ExteriorRing","ST_GeoHash","ST_GeomCollFromText","ST_GeometryCollectionFromText","ST_GeomCollFromTxt","ST_GeomCollFromWKB","ST_GeometryCollectionFromWKB","ST_GeometryN","ST_GeometryType","ST_GeomFromGeoJSON","ST_GeomFromText","ST_GeometryFromText","ST_GeomFromWKB","ST_GeometryFromWKB","ST_InteriorRingN","ST_Intersection","ST_Intersects","ST_IsClosed","ST_IsEmpty","ST_IsSimple","ST_IsValid","ST_LatFromGeoHash","ST_Length","ST_LineFromText","ST_LineStringFromText","ST_LineFromWKB","ST_LineStringFromWKB","ST_LongFromGeoHash","ST_MakeEnvelope","ST_MLineFromText","ST_MultiLineStringFromText","ST_MLineFromWKB","ST_MultiLineStringFromWKB","ST_MPointFromText","ST_MultiPointFromText","ST_MPointFromWKB","ST_MultiPointFromWKB","ST_MPolyFromText","ST_MultiPolygonFromText","ST_MPolyFromWKB","ST_MultiPolygonFromWKB","ST_NumGeometries","ST_NumInteriorRing","ST_NumInteriorRings","ST_NumPoints","ST_Overlaps","ST_PointFromGeoHash","ST_PointFromText","ST_PointFromWKB","ST_PointN","ST_PolyFromText","ST_PolygonFromText","ST_PolyFromWKB","ST_PolygonFromWKB","ST_Simplify","ST_SRID","ST_StartPoint","ST_SymDifference","ST_Touches","ST_Union","ST_Validate","ST_Within","ST_X","ST_Y","StartPoint","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","STRCMP","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUBTIME","SUM","SYSDATE","SYSTEM_USER","TAN","TIME","TIME_FORMAT","TIME_TO_SEC","TIMEDIFF","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TO_BASE64","TO_DAYS","TO_SECONDS","Touches","TRIM","TRUNCATE","UCASE","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UpdateXML","UPPER","USER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","UUID_SHORT","VALIDATE_PASSWORD_STRENGTH","VALUES","VAR_POP","VAR_SAMP","VARIANCE","VERSION","WAIT_FOR_EXECUTED_GTID_SET","WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS","WEEK","WEEKDAY","WEEKOFYEAR","WEIGHT_STRING","Within","X","Y","YEAR","YEARWEEK"];T.keywords=[].concat(S,e,t)},"64a9":function(E,T,S){},b635:function(E,T,S){"use strict";S.r(T);S("cadf"),S("551c"),S("f751"),S("097d");var e=function(){var E=this,T=E.$createElement,S=E._self._c||T;return S("div",{attrs:{id:"container"}})},t=[],R=(S("96cf"),S("3b8d")),A=S("c2c6"),I=(S("7f7f"),S("f559"),S("6b54"),S("6762"),S("2fdb"),S("ac6a"),S("456d"),S("28a5"),S("75fc")),n=S("d225"),O=S("b0b4"),N=S("507d"),o=function(){function E(T){var S=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{dbName:"",tables:[]};Object(n["a"])(this,E),this.SORT_TEXT={Table:"0",Column:"1",Keyword:"2",Database:"3"},this.customKeywords=S,this.dbKeywords=[].concat(Object(I["a"])(N["keywords"]),Object(I["a"])(S)),this.dbSchema=e,this.monaco=T,this.getKeywordSuggest=this.getKeywordSuggest.bind(this),this.getTableSuggest=this.getTableSuggest.bind(this),this.getTableSuggestColumn=this.getTableSuggestColumn.bind(this)}return Object(O["a"])(E,[{key:"setDbSchema",value:function(E){this.dbSchema=E}},{key:"provideCompletionItems",value:function(E,T){var S=T.lineNumber,e=T.column,t=E.getValueInRange({startLineNumber:S,startColumn:0,endLineNumber:S,endColumn:e}),R=t.trim().split(/\s+/),A=R[R.length-1].toLowerCase();if("database"===A)return{suggestions:this.getDataBaseSuggest()};if("from"===A)return{suggestions:Object.keys(this.dbSchema.tables).map(this.getTableSuggest)};if("select"===A)return{suggestions:this.getAllTableColumnCompletionItems()};if(this.customKeywords.toString().includes(A))return{suggestions:this.getCustomSuggest()};var I=Object.keys(this.dbSchema.tables).map(this.getTableSuggest).concat(this.getAllTableColumnCompletionItems()).concat(this.dbKeywords.map(this.getKeywordSuggest));return{suggestions:I}}},{key:"getCustomSuggest",value:function(){return this.customKeywords.map(this.getKeywordSuggest)}},{key:"getAllTableColumnCompletionItems",value:function(){var E=this,T=[];return Object.keys(this.dbSchema.tables).forEach(function(S){E.dbSchema.tables[S].forEach(function(e){T.push(E.getTableSuggestColumn(S,e))})}),T}},{key:"getDataBaseSuggest",value:function(){return[{label:this.dbSchema.dbName,kind:this.monaco.languages.CompletionItemKind.Keyword,detail:"<database>",sortText:this.SORT_TEXT.Database,insertText:this.dbSchema.dbName}]}},{key:"getKeywordSuggest",value:function(E){return{label:E,kind:this.monaco.languages.CompletionItemKind.Keyword,detail:"",sortText:this.SORT_TEXT.Keyword,insertText:E.startsWith("$")?E.slice(1):E}}},{key:"getTableSuggest",value:function(E){return{label:E,kind:this.monaco.languages.CompletionItemKind.Module,detail:"<table>",sortText:this.SORT_TEXT.Table,insertText:E}}},{key:"getTableSuggestColumn",value:function(E,T){return{label:T.name,kind:this.monaco.languages.CompletionItemKind.Field,detail:"<column> ".concat(T.type," ").concat(E),sortText:this.SORT_TEXT.Column,insertText:T.name}}}]),E}(),_={name:"App",props:{value:{type:String,default:""}},data:function(){return{monacoEditor:null,sqlSnippets:null}},mounted:function(){var E=Object(R["a"])(regeneratorRuntime.mark(function E(){var T;return regeneratorRuntime.wrap(function(E){while(1)switch(E.prev=E.next){case 0:return this.initEditor(),E.next=3,this.getDbSchema();case 3:T=E.sent,this.sqlSnippets.setDbSchema(T);case 5:case"end":return E.stop()}},E,this)}));function T(){return E.apply(this,arguments)}return T}(),methods:{initEditor:function(){var E=this;this.sqlSnippets=new o(A,["${ }"]),A["languages"].registerCompletionItemProvider("sql",{triggerCharacters:[" ",".","$"],provideCompletionItems:function(T,S){return E.sqlSnippets.provideCompletionItems(T,S)}}),this.monacoEditor=A["editor"].create(document.getElementById("container"),{value:this.value,language:"sql",minimap:{enabled:!0},suggestOnTriggerCharacters:!0}),this.monacoEditor.onDidChangeModelContent(function(T){E.caretOffset=T.changes[0].rangeOffset,E.$emit("input",E.monacoEditor.getValue())})},getDbSchema:function(){return new Promise(function(E){setTimeout(function(){E({dbName:"test",tables:{user:[{name:"username",type:"varchar"},{name:"password",type:"varchar"}]}})},200)})}}},r=_,C=(S("034f"),S("2877")),i=Object(C["a"])(r,e,t,!1,null,null,null),L=i.exports;T["default"]=L}})});
//# sourceMappingURL=sqlpad.min.js.map